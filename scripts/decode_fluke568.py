#/usr/bin/env python2.7
# -*- coding: UTF-8 -*-
"""
    FLUKE 568 experimental driver.

   
    @author Daniel Duke <daniel.duke@monash.edu>
    @copyright (c) 2019 LTRAC
    @license GPL-3.0+
    @version 0.0.1
    @date 01/03/2019
        __   ____________    ___    ______
       / /  /_  ____ __  \  /   |  / ____/
      / /    / /   / /_/ / / /| | / /
     / /___ / /   / _, _/ / ___ |/ /_________
    /_____//_/   /_/ |__\/_/  |_|\__________/

    Laboratory for Turbulence Research in Aerospace & Combustion (LTRAC)
    Monash University, Australia
"""

# Data stream includes:
# - IR max, live, min
# - avg temp
# when thermocouple inserted also add:
# - thermocouple temp
# - difference 

"""
    sample with thermocouple live streaming, IR=29.0, TC=27.2 degC, e=1.00
"""
a=(
'\x8205\x00 \xac3\xe8\x03A  \xec\xdeA@\x04{]Ri\xa1\xd6\x08\x05\xff\xff\x7f? \xc0\x8a\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B \x1c\x08\xc6\xecA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 @4\xe8\x03A \xb0\xec\xdeA7\x04G\x9aRi\xa1\xd6\x08\x05\xff\xff\x7f? \x0c\x8d\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B L\x08?\xecA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 \xe06\xe8\x03A \xfc\xec\xdeA[\x04D\xd8Ri\xa1\xd6\x08\x05\xff\xff\x7f? \xa8\xa4\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B x\x08\xc8\xebA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 (/\xe8\x03A p\xed\xdeAR\x04\x10\x15Si\xa1\xd6\x08\x05\xff\xff\x7f? \x84\xab\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B |\x08^\xebA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 ,.\xe8\x03A \xa4\xed\xdeAv\x04\rSSi\xa1\xd6\x08\x05\xff\xff\x7f? \x98\xa8\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B \x80\x08\x00\xebA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 \xe8*\xe8\x03A \xe0\xed\xdeAm\x04\xd9\x8fSi\xa1\xd6\x08\x05\xff\xff\x7f? `\xb0\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B \xa8\x08\x93\xeaA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 x-\xe8\x03A \x18\xee\xdeA\x91\x04\xd6\xcdSi\xa1\xd6\x08\x05\xff\xff\x7f? \x18\xb5\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B \xb8\x08L\xeaA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 \x00/\xe8\x03A x\xee\xdeA\x88\x04\xa2\nTi\xa1\xd6\x08\x05\xff\xff\x7f? \x10\xc3\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B P\x08\x0e\xeaA \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 \xd0$\xe8\x03A \xcc\xee\xdeA\xac\x04\x9fHTi\xa1\xd6\x08\x05\xff\xff\x7f? \x04\xca\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B \x8c\x08\xd6\xe9A \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 h\x19\xe8\x03A \x18\xef\xdeA\xa3\x04k\x85Ti\xa1\xd6\x08\x05\xff\xff\x7f? \x14\xd5\x06\xd9A0p\xf5\xd9A\x070\xb6\x9e\x18B x\x08\x94\xe9A \xf8\x8f.\tA\x00\x00\x01\x00\x00\x00')


"""
    sample without thermocouple, hold value, Max 27.5, Curr 25.3, Min 24.0, e=1.00, degC, Hold on.
"""
b=(
'\x8205\x00 T^\xca\x03A <\xb2\xdeAH\x040\x05*i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \xa0\x08\xbf\xccA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA?\x04\xfcA*i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA h\x08y\xccA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeAc\x04\xf9\x7f*i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA 0\x08(\xccA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeAZ\x04\xc5\xbc*i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA l\x08\xf3\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA~\x04\xc2\xfa*i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \xbc\x08\xc4\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeAu\x04\x8e7+i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA l\x08\x9b\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA\x99\x04\x8bu+i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \xdc\x08v\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA\x90\x04W\xb2+i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \x98\x08L\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA\xb4\x04T\xf0+i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA $\x081\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00 T^\xca\x03A <\xb2\xdeA\xab\x04 -,i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \xd4\x08\x18\xcbA `\xaf]\t@\x00\x00\x01\x00\x00\x00')
#'\x04T\xc0"i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00\x8205\x00 T^\xca\x03A <\xb2\xdeA\x05\x04)\xcd)i\xa1\xd6\x08\x05\xff\xff\x7f?$\x8bK\x06\x84E0L\xee\xbfA\x0708\xa4\xdbA \x00\x08\x0f\xcdA `\xaf]\t@\x00\x00\x01\x00\x00\x00')


"""
   sample without thermocouple, all readings --- & memory empty
"""
c=(
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7A[\x04\xc6x\x12i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7AR\x04\x92\xb5\x12i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7Av\x04\x8f\xf3\x12i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7Am\x04[0\x13i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7A\x91\x04Xn\x13i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7A\x88\x04$\xab\x13i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7A\xac\x04!\xe9\x13i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00',\
'\x8205\x00!\x84w\xf4\x03A!\x88^\xc7A\xa3\x04\xed%\x14i\xa1\xd6\x08\x05\xff\xff\x7f?!\x8bK\x06\x84E1|/\xe4A\x071hz\xf4A!8\x08s\xf4A!`W\x02\t@\x00\x00\x01\x00\x00\x00')

import struct, binascii, sys

l = list(a); l.extend(b)
for x in l:
    
    y=x.replace('!',' ').split(' ')
    #print repr(x)
    #print y[0]
    #print '\t',repr(y[1]), struct.unpack('<fc',y[1])
    if len(y[2])>0:
        n= (len(y[2])-2)/2
        print '\t',struct.unpack(('<cc%i' % n) + 'h',y[2])
    #print '\t',repr(y[3]),struct.unpack('<Ic',y[3])
    #print '\t',repr(y[4]),struct.unpack('<11c',y[4])
